{"ast":null,"code":"var clientId='c46b7d6dd9dc4f01b0706cb688254505';var redirectUri='http://localhost:3000/';var accessToken;var Spotify={getAccessToken:function getAccessToken(){if(accessToken){return accessToken;}// check for access token match\nvar accessTokenMatch=window.location.href.match(/access_token=([^&]*)/);var expiresInMatch=window.location.href.match(/expires_in=([^&]*)/);if(accessTokenMatch&&expiresInMatch){accessToken=accessTokenMatch[1];var expiresIn=Number(expiresInMatch[1]);// This clears the parameters, allowing us to grap a new access token when it expiresIn.\nwindow.setTimeout(function(){return accessToken='';},expiresIn*1000);window.history.pushState('Access Token',null,'/');return accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?\\n            client_id=\".concat(clientId,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);window.location=accessUrl;}},search:function search(term){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri};});});},savePlayList:function savePlayList(name,trackUris){if(!name||!trackUris.length){return;}var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};var userId;return fetch('https://api.spotify.com/v1/me',{headers:headers}).then(function(response){return response.json();}).then(function(jsonResponse){userId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\"),{headers:headers,method:'POST',body:JSON.stringify({name:name})}).then(function(response){return response.json();}).then(function(jsonResponse){var playlistId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists/\").concat(playlistId,\"/tracks\"),{headers:headers,method:'POST',body:JSON.stringify({uris:trackUris})});});});}};export default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlayList","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris"],"sources":["C:/Users/masou/jammming/src/util/Spotify.js"],"sourcesContent":["const clientId = 'c46b7d6dd9dc4f01b0706cb688254505';\r\nconst redirectUri = 'http://localhost:3000/';\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if (accessToken) {\r\n            return accessToken;\r\n        }\r\n\r\n        // check for access token match\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n        if (accessTokenMatch && expiresInMatch) {\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n            // This clears the parameters, allowing us to grap a new access token when it expiresIn.\r\n\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        } else {\r\n            const accessUrl = `https://accounts.spotify.com/authorize?\r\n            client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n            window.location = accessUrl;\r\n        }\r\n    },\r\n    search(term) {\r\n        const accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n           headers: {\r\n              Authorization: `Bearer ${accessToken}`\r\n           }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n            if (!jsonResponse.tracks) {\r\n                return [];\r\n            }\r\n            return jsonResponse.tracks.items.map(track => ({\r\n                id: track.id,\r\n                name: track.name,\r\n                artist: track.artists[0].name,\r\n                album: track.album.name,\r\n                uri: track.uri\r\n\r\n            }));\r\n        });\r\n\r\n    },\r\n\r\n    savePlayList(name, trackUris) {\r\n        if (!name || !trackUris.length){\r\n            return;\r\n        }\r\n\r\n        const accessToken = Spotify.getAccessToken();\r\n        const headers = { Authorization: `Bearer ${accessToken}`};\r\n        let userId;\r\n\r\n        return fetch('https://api.spotify.com/v1/me', { headers: headers }\r\n        ).then(response => response.json()\r\n        ).then(jsonResponse => {\r\n            userId = jsonResponse.id;\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, \r\n            {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ name: name})\r\n            }).then(response => response.json()\r\n            ).then(jsonResponse => {\r\n                const playlistId = jsonResponse.id;\r\n                return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, \r\n                {\r\n                   headers: headers,\r\n                   method:  'POST',\r\n                   body: JSON.stringify({ uris: trackUris})\r\n                })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Spotify;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}